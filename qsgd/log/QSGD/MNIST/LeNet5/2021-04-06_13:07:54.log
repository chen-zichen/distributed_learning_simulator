2021-04-06 13:07:54,509 INFO {thd:140008201176896} [arg_parse.py => 72] : use dataset MNIST and model LeNet5
2021-04-06 13:08:09,750 INFO {thd:140005701428800} [trainer.py => 144] : training_set_size is 49995
2021-04-06 13:08:09,751 INFO {thd:140005701428800} [trainer.py => 148] : use device cuda:0
2021-04-06 13:08:09,751 INFO {thd:140008201176896} [simulator.py => 52] : begin training
2021-04-06 13:08:11,528 INFO {thd:140005701428800} [trainer.py => 359] : begin training, hyper_parameter is epochs:1 batch_size:64 learning_rate:0.01 weight_decay:1 optimizer:<class 'torch.optim.sgd.SGD'>, optimizer is SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 2.0002000200020003e-05
) ,lr_scheduler is <torch.optim.lr_scheduler.ReduceLROnPlateau object at 0x7f55b70f0d50>, model: LeNet5, loss_fun: NLLLoss(), parameter number is 61706
2021-04-06 13:08:11,787 ERROR {thd:140005701428800} [executor_pool.py => 37] : catch exception:can't convert cuda:0 device type tensor to numpy. Use Tensor.cpu() to copy the tensor to host memory first.
2021-04-06 13:08:11,788 ERROR {thd:140005701428800} [executor_pool.py => 38] : traceback:Traceback (most recent call last):
  File "/home/cicie/.local/lib/python3.7/site-packages/cyy_naive_lib-0.1-py3.7.egg/cyy_naive_lib/data_structure/executor_pool.py", line 35, in process
    fn(*args, **kwargs)
  File "/home/cicie/distributed_learning_simulator/qsgd/qsgd_worker.py", line 19, in train
    device=device, optimizer_step_callbacks=[self.__get_gredient]
  File "/home/cicie/.local/lib/python3.7/site-packages/cyy_naive_pytorch_lib-0.1-py3.7.egg/cyy_naive_pytorch_lib/trainer.py", line 482, in train
    return super().train(**kwargs)
  File "/home/cicie/.local/lib/python3.7/site-packages/cyy_naive_pytorch_lib-0.1-py3.7.egg/cyy_naive_pytorch_lib/trainer.py", line 405, in train
    return super().train(**kwargs)
  File "/home/cicie/.local/lib/python3.7/site-packages/cyy_naive_pytorch_lib-0.1-py3.7.egg/cyy_naive_pytorch_lib/trainer.py", line 253, in train
    callback(optimizer, trainer=self, device=device)
  File "/home/cicie/miniconda/envs/fedml/lib/python3.7/site-packages/torch/autograd/grad_mode.py", line 26, in decorate_context
    return func(*args, **kwargs)
  File "/home/cicie/distributed_learning_simulator/qsgd/qsgd_worker.py", line 50, in __get_gredient
    d_p = function_gradient(q_gradients=d_p).detach().cpu()
  File "/home/cicie/distributed_learning_simulator/qsgd/qsgd_worker.py", line 69, in function_gradient
    level_float = level * np.abs(q_gradients) / norm
  File "/home/cicie/miniconda/envs/fedml/lib/python3.7/site-packages/torch/tensor.py", line 630, in __array__
    return self.numpy()
TypeError: can't convert cuda:0 device type tensor to numpy. Use Tensor.cpu() to copy the tensor to host memory first.

2021-04-06 13:08:11,788 INFO {thd:140008201176896} [simulator.py => 54] : end training
